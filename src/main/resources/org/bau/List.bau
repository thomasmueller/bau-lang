module org.bau.List

# List
type List(T)
    array T[]
    size int

# Create a new list
fun newList(T type) List(T)
    return List(T)(T[4])

# Append an entry to the list
fun List(T) add(x T)
    if size >= array.len
        n : T[array.len * 2]
        for i := until(array.len)
            n[i] = array[i]
        array = n
    array[size] = x
    size += 1

# Insert an entry to the list at the given index
fun List(T) add(index int, x T)
    if size >= array.len
        n : T[array.len * 2]
        for i := until(array.len)
            n[i] = array[i]
        array = n
    p := size
    while p > index
        array[p] = array[p - 1]
        p -= 1
    array[index] = x
    size += 1

fun List(T) remove(pos int)
    while pos < size - 1
        array[pos] = array[pos + 1]
        pos += 1
    array[pos] = null

fun List(T) get(x int) T?
    return array[x]
