import org.bau.Exception
  exception

fun factorial(x int) int throws exception
  if x > 20
    throw exception('Value too large')
  if x <= 1
    return 1
  f := factorial(x - 1)
  return x * f

i := 0
while i <= 30
  println('Factorial of ' i ' is ' factorial(i))
  catch e
    println('Factorial of ' i ' resulted in ' e.message)
  i += 1

## Expected
Factorial of 0 is 1
Factorial of 1 is 1
Factorial of 2 is 2
Factorial of 3 is 6
Factorial of 4 is 24
Factorial of 5 is 120
Factorial of 6 is 720
Factorial of 7 is 5040
Factorial of 8 is 40320
Factorial of 9 is 362880
Factorial of 10 is 3628800
Factorial of 11 is 39916800
Factorial of 12 is 479001600
Factorial of 13 is 6227020800
Factorial of 14 is 87178291200
Factorial of 15 is 1307674368000
Factorial of 16 is 20922789888000
Factorial of 17 is 355687428096000
Factorial of 18 is 6402373705728000
Factorial of 19 is 121645100408832000
Factorial of 20 is 2432902008176640000
Factorial of 21 resulted in Value too large
Factorial of 22 resulted in Value too large
Factorial of 23 resulted in Value too large
Factorial of 24 resulted in Value too large
Factorial of 25 resulted in Value too large
Factorial of 26 resulted in Value too large
Factorial of 27 resulted in Value too large
Factorial of 28 resulted in Value too large
Factorial of 29 resulted in Value too large
Factorial of 30 resulted in Value too large
