import org.bau.BigInt
    bigInt
import org.bau.Math
import org.bau.Env

fun main()
    n := 50
    if Env.argCount() > 1
        n = Math.parseInt(Env.arg(1))
    k, i := 0
    buff : i8[10]
    while i < n
        k += 1
        nextTerm(k)
        continue num.compare(acc) > 0
        d : extractDigit(3)
        continue d <> extractDigit(4)
        eliminateDigit(d)
        buff[i % 10] = ord('0') + d
        i += 1
        if i % 10 = 0
            println(buff ' : ' i)

acc bigInt := 0
den, num bigInt := 1

fun extractDigit(nth int) int
    return num.mul(nth).add(acc).div(den).toInt()

fun eliminateDigit(d int)
    acc = acc.sub(den.mul(d))
    acc = acc.mul(10)
    num = num.mul(10)

fun nextTerm(k int)
    acc = acc.add(num.shiftLeft(1))
    acc = acc.mul(k * 2 + 1)
    den = den.mul(k * 2 + 1)
    num = num.mul(k)

## Expected
3141592653 : 10
5897932384 : 20
6264338327 : 30
9502884197 : 40
1693993751 : 50
