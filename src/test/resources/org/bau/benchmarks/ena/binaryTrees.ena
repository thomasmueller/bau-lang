# The Computer Language Benchmarks Game
# https://salsa.debian.org/benchmarksgame-team/benchmarksgame/

type Node(left Node, right Node)

fun nodeCount(n Node) int
    res: 1
    if n.left <> 0
        res +: nodeCount(n.left)
    if n.right <> 0
        res +: nodeCount(n.right)
    ret res

fun buildTree(depth int) Node
    if depth = 0
        ret Node(0, 0)
    ret Node(buildTree(depth - 1), buildTree(depth - 1))

fun count(depth int) int
    ret nodeCount(buildTree(depth))

fun stretch(depth int)
    println('stretch tree of depth ', depth, '  check: ', count(depth))

fun main()
    n: 3
    minDepth: 4
    maxDepth: n
    if minDepth + 2 > n
        maxDepth: minDepth + 2
    stretchDepth: maxDepth + 1
    stretch(stretchDepth)
    longLived: buildTree(maxDepth)
    depth: minDepth
    loop depth <= maxDepth
        iterations: 1 << (maxDepth - depth + minDepth)
        sum: 0
        for i < iterations
            sum +: count(depth)
        println(iterations, '  trees of depth ', depth, '  check: ', sum)
        depth +: 2
    println('long lived tree of depth ', maxDepth, '  check: ', nodeCount(longLived))
